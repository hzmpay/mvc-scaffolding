# 配置库名称
spring.shardingsphere.datasource.names=sharding0, sharding1

# 数据库默认参数
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password=coship

# 配置数据库
spring.shardingsphere.datasource.sharding0.jdbc-url=jdbc:mysql://172.21.23.56:3306/sharding0?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC
spring.shardingsphere.datasource.sharding1.jdbc-url=jdbc:mysql://172.21.23.56:3306/sharding1?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC

# 主键生成策略相关参数配置
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

## 默认数据库分片策略，也可以对不同的表分表进行不同的分库策略指定
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-column=user_id
#spring.shardingsphere.rules.sharding.default-database-strategy.standard.sharding-algorithm-name=database-inline
## 绑定表规则列表，以逗号隔开或者采用数组形式指定配置多行，binding-tables[0]
##spring.shardingsphere.rules.sharding.binding-tables[0]=t_order
##spring.shardingsphere.rules.sharding.binding-tables[1]=t_order_item
#spring.shardingsphere.rules.sharding.binding-tables=t_order,t_order_item
## 广播表规则列表
#spring.shardingsphere.rules.sharding.broadcast-tables=t_address
## 分库分表算法具体实现配置
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.type=INLINE
#spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline.props.algorithm-expression=sharding$->{user_id % 2}


############################################  t_order 表  ############################################
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=sharding$->{0..1}.t_order_$->{0..1}
# 指定分布式序列order_id生成策略
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake

# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order.database-strategy.standard.sharding-algorithm-name=database-inline-order
# 分库算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-order.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-order.props.algorithm-expression=sharding$->{user_id % 2}

# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=table-inline-order
# 分表算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-order.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-order.props.algorithm-expression=t_order_$->{order_id % 2}


############################################  t_order_item 表  ############################################
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=sharding$->{0..1}.t_order_item_$->{0..1}

# 配置分库策略
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-column=user_id
spring.shardingsphere.rules.sharding.tables.t_order_item.database-strategy.standard.sharding-algorithm-name=database-inline-order-item
# 分库算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-order-item.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.database-inline-order-item.props.algorithm-expression=sharding$->{user_id % 2}

# 配置分表策略
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=table-inline-order-item
# 分表算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-order-item.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.table-inline-order-item.props.algorithm-expression=t_order_item_$->{order_id % 2}

