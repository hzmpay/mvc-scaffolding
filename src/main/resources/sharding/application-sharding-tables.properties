# 配置库名称
spring.shardingsphere.datasource.names=sharding-default

# 数据库默认参数
spring.shardingsphere.datasource.common.type=com.zaxxer.hikari.HikariDataSource
spring.shardingsphere.datasource.common.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.common.username=root
spring.shardingsphere.datasource.common.password=coship

# 配置数据库
spring.shardingsphere.datasource.sharding-default.jdbc-url=jdbc:mysql://172.21.23.56:3306/sharding-default?useUnicode=true&characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=UTC

# 主键生成策略相关参数配置
spring.shardingsphere.rules.sharding.key-generators.snowflake.type=SNOWFLAKE
spring.shardingsphere.rules.sharding.key-generators.snowflake.props.worker-id=123

############################################  t_order 表  ############################################
spring.shardingsphere.rules.sharding.tables.t_order.actual-data-nodes=sharding.t_order_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.table-strategy.standard.sharding-algorithm-name=order-inline
# 指定order_id生成策略
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.column=order_id
spring.shardingsphere.rules.sharding.tables.t_order.key-generate-strategy.key-generator-name=snowflake
# 分库分表算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.order-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.order-inline.props.algorithm-expression=t_order_$->{order_id % 2}

############################################  t_order_item 表  ############################################
spring.shardingsphere.rules.sharding.tables.t_order_item.actual-data-nodes=sharding.t_order_item_$->{0..1}
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-column=order_id
spring.shardingsphere.rules.sharding.tables.t_order_item.table-strategy.standard.sharding-algorithm-name=order-item-inline
# 指定order_item_id生成策略
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.column=order_item_id
spring.shardingsphere.rules.sharding.tables.t_order_item.key-generate-strategy.key-generator-name=snowflake
# 分库分表算法具体实现配置
spring.shardingsphere.rules.sharding.sharding-algorithms.order-item-inline.type=INLINE
spring.shardingsphere.rules.sharding.sharding-algorithms.order-item-inline.props.algorithm-expression=t_order_item_$->{order_id % 2}

